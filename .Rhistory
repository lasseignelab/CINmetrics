cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 'n')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'lt')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 'n')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 'n')
par(mfrow = c(1,2))
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 'n')
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 't')
par(mfrow = c(1,2))
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 't')
corrplot(cin.corr, order = 'hclust', addrect = 4)
cin.corr.df %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") #%>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% str()#%>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% typeof()#%>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") #%>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") #%>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, add = TRUE, tl.pos = 't')
cin.corr.combined <- rbind(cin.corr.normal, cin.corr.tumor)
View(cin.corr.combined)
corrplot(cin.corr.combined, order = 'hclust', addrect = 4)
cin.corr.combined <- cbind(cin.corr.normal, cin.corr.tumor)
corrplot(cin.corr.df, order = 'hclust', addrect = 4)
cin.corr.df %>% Heatmap(cluster_rows = TRUE, cluster_columns = TRUE)
cin.corr.df %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% select(3:8) %>% Heatmap()
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'circle', type = 'upper', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'd')
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'd')
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'd', tl.offset = 5)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'd', tl.offset = -5)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'd', tl.offset = -3)
tl.offset = -3
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'l', tl.offset = -3)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = TRUE, tl.pos = 'l')
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'l')
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 't')
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, diag = FALSE, tl.pos = 'n')
cin.corr.tumor <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'upper', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.normal <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% corrplot(., method = 'number', type = 'lower', order = 'hclust', addrect = 4, diag = FALSE)
cin.corr.df %>% select(3:8) %>% Heatmap()
cin.corr.df %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
normal.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
normal.heatmap + tumor.heatmap
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap()
normal.heatmap + tumor.heatmap
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Normal samples")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Tumor samples")
normal.heatmap + tumor.heatmap
col_simpson <- colorRamp2(c(-1, 0, 1), c("#f8db27", "#ffffff", "#2f64d6"))
library(circlize)
col_simpson <- colorRamp2(c(-1, 0, 1), c("#f8db27", "#ffffff", "#2f64d6"))
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Normal samples", col = col_simpson)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Tumor samples")
normal.heatmap + tumor.heatmap
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Tumor samples", col = col_simpson)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "Tumor samples", col = col_simpson)
normal.heatmap + tumor.heatmap
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, row_tiel = "CINmetrics", column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ")
draw(combined.heatmap, row_title = "CINmetrics", column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE)
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ", row_sub_title-sice = "left")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ", row_sub_title-sice = "left")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ", row_sub_title_side = "left")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics in Normal vs Tumour samples ", row_sub_title_side = "left")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", row_names_side = "left")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", row_dend_side = "right")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = FALSE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_sub_title_side = "left")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics")
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics")
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold"),
heatmap_column_title_gp = gpar(foncsize = 10),
legend_border = "black",
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold"),
heatmap_column_names_gp = gpar(fontface = "bold"),
heatmap_column_title_gp = gpar(foncsize = 10),
legend_border = "black",
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold"),
heatmap_row_names_gp = gpar(fontface = "bold"),
heatmap_column_title_gp = gpar(foncsize = 10),
legend_border = "black",
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold"),
heatmap_row_names_gp = gpar(fontface = "bold"),
heatmap_column_title_gp = gpar(fontsize = 10),
legend_border = "black",
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold", fontsize = 8),
heatmap_row_names_gp = gpar(fontface = "bold", fontsize = 8),
heatmap_column_title_gp = gpar(fontsize = 10),
legend_border = "black",
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_row_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_column_title_gp = gpar(fontface = "bold", fontsize = 10),
legend_border = "black", legend_labels_gp = gpar(fontface = "bold", fontsize = 6),
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_row_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_column_title_gp = gpar(fontface = "bold", fontsize = 10),
legend_border = "black", legend_labels_gp = gpar(fontface = "bold", fontsize = 8),
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 10))
draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 12))
figure4 <- ggpar(figure3, main = "CINmetrics", ylab = "log10(metric)", font.main = c(14, "bold", "black"), font.x = c(14, "bold.italic", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
final.heatmap <- draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 12))
par(mfrow = c(1,2))
figure4 + final.heatmap
par(mfrow = c(1,2))
figure4
final.heatmap
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(14, "bold", "black"), font.x = c(14, "bold.italic", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
par(mfrow = c(1,2))
figure4
final.heatmap
par(mfrow = c(1,2))
figure4 final.heatmap
par(mfrow = c(1,2))
figure4, final.heatmap
par(mfrow = c(1,2))
figure4
final.heatmap
par(mfrow = c(1,1))
figure4
final.heatmap
library(gridExtra)
grid.arrange(figure4, final.heatmap, nrow = 1)
library(grid)
plot_grid(figure4, final.heatmap, nrow = 1)
final.heatmap <- grid.grabExpr(draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 12)))
plot_grid(figure4, final.heatmap, nrow = 1)
plot_grid(figure4, final.heatmap, nrow = 1, align = "hv")
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv")
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", rel_widths = c(1,2))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", rel_widths = c(1,1.5))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "none")
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv")
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", rel_widths = c(1,1.1))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "v", rel_widths = c(1,1.1),
labels = c('A','B'))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "h", rel_widths = c(1,1.1),
labels = c('A','B'))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", rel_widths = c(1,1.1),
labels = c('A','B'))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tblr"
rel_widths = c(1,1.1), labels = c('A','B'))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tblr",
rel_widths = c(1,1.1), labels = c('A','B'))
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1.1), labels = c('A','B'))
grid.arrange(figure4, final.heatmap, nrow = 1)
grid.arrange(figure4, final.heatmap, layout_matrix = matrix(c(1, 2, 2), ncol = 3))
grid.arrange(figure4, final.heatmap, layout_matrix = matrix(c(1, 1.5, 1.5), ncol = 3))
final_figure <- arrangeGrob(figure4, final.heatmap, layout_matrix = matrix(c(1, 1.5, 1.5), ncol = 3))
ggsave(file = "final_figure.pdf", final_figure)
final_figure <- arrangeGrob(figure4, final.heatmap, layout_matrix = matrix(c(1, 1, 1), ncol = 3))
ggsave(file = "final_figure.pdf", final_figure)
final_figure <- arrangeGrob(figure4, final.heatmap, nrow = 1)
ggsave(file = "final_figure.pdf", final_figure)
pdf("final_figure.pdf", width = 8, height = 12) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1.1), labels = c('A','B'))
dev.off() # Close the file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
pdf("final_figure.pdf", width = 8, height = 12) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
pdf("final_figure.pdf", width = 12, height = 8) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
pdf("final_figure.pdf", width = 12, height = 8) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(14, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(10, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off()
cinmetrics.data %>% mutate(value = log10(value)) %>%
ggstripchart(., x = "cinmetric",
y = "value",
combine = TRUE,
#merge = TRUE,
ylab = "",
xlab = "",
color = "type",
size = 0.5,# Line color
fill = "type",
font.label = c(10, "bold", "black"),
#shape = "type",
palette = "simpsons",
alpha = 0.5,
add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"),
orientation = "horiz",
order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
position = position_jitterdodge()
) -> figure3
#scale_color_discrete(name = 'Sample type', labels = c("Normal", "Tumour") ) -> figure3
#annotate_figure(figure3,
#               top = text_grob("CINmetrics", color = "black", face = "bold", size = 14),
#                bottom = text_grob("log10(metric)", color = "black",
#                                   just = "center", face = "bold.italic", size = 16)) #%>% ggexport(filename = "figure3.pdf")
figure3
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(10, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
figure4
cinmetrics.data %>% mutate(value = log10(value)) %>%
ggstripchart(., x = "cinmetric",
y = "value",
combine = TRUE,
#merge = TRUE,
ylab = "",
xlab = "",
color = "type",
size = 0.5,# Line color
fill = "type",
font.label = c(10, "bold", "black"),
#shape = "type",
palette = "simpsons",
alpha = 0.5,
add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"),
orientation = "horiz",
order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
position = position_jitterdodge()
) + font("xy.text", size = 10, color = "black", face = "bold")-> figure3
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(10, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, clustering_distance_rows = NA, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
combined.heatmap
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, clustering_distance_rows = NA, clustering_distance_columns = NA, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
combined.heatmap
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% Heatmap(col = col_simpson, clustering_distance_rows = "spearman", clustering_distance_columns = "spearman", show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
tumor.heatmap
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, clustering_distance_rows = "spearman", clustering_distance_columns = "spearman", show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
combined.heatmap
figure4
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
library(usethis)
use_git_config(user.name = "vishaloza", user.email = "vishoza@gmail.com")
library(CINmetrics)
library(TCGAbiolinks)
query.maskCNV.hg39.BRCA <- GDCquery(project = "TCGA-BRCA",
data.category = "Copy Number Variation",
data.type = "Masked Copy Number Segment", legacy=FALSE)
GDCdownload(query = query.maskCNV.hg39.BRCA)
maskCNV.BRCA <- GDCprepare(query = query.maskCNV.hg39.BRCA, summarizedExperiment = TRUE)
maskCNV.BRCA <- data.frame(maskCNV.BRCA, stringsAsFactors = FALSE)
library(tidyverse)
cinmetrics.test <- CINmetrics(cnvData = maskCNV.BRCA)
mod.tai <- taiModified(cnvData = maskCNV.BRCA)
cinmetrics.test <- inner_join(cinmetrics.test, mod.tai, by = c("sample_id"), copy = TRUE)
head(cinmetrics.test)
cinmetrics.data <- cinmetrics.test %>%
pivot_longer(!sample_id, names_to = "cinmetric", values_to = "value") %>%
separate(sample_id, c("patient", "type"), 12) %>%
separate(type, c("tumour"), -13)
cinmetrics.data$tumour <-  as.numeric(str_remove(cinmetrics.data$tumour, "-"))
cinmetrics.data <- cinmetrics.data %>%
mutate(type = case_when(tumour == 1 | tumour == 6 ~ "tumor",
tumour == 10 | tumour == 11 ~ "normal"))
library(ggplot2)
library(ggridges)
library(patchwork)
library(quantable)
cinmetrics.scale <- cinmetrics.test %>% column_to_rownames(var = "sample_id") %>% as.matrix() %>% robustscale(., dim = 1, scale = FALSE)
cinmetrics.scale <- as.data.frame(cinmetrics.scale$data) %>% rownames_to_column(var = "sample_id")
cinmetrics.scale <- cinmetrics.scale %>%
pivot_longer(!sample_id, names_to = "cinmetric", values_to = "value") %>%
separate(sample_id, c("patient", "type"), 12) %>%
separate(type, c("tumour"), -13)
cinmetrics.scale$tumour <-  as.numeric(str_remove(cinmetrics.scale$tumour, "-"))
cinmetrics.scale <- cinmetrics.scale %>%
mutate(type = case_when(tumour == 1 | tumour == 6 ~ "tumor",
tumour == 10 | tumour == 11 ~ "normal"))
library(ggpubr)
library(cowplot)
library(corrplot)
library(ComplexHeatmap)
library(circlize)
library(cowplot)
library(grid)
library(gridExtra)
cin.corr.df <- cinmetrics.test %>%
separate(sample_id, c("patient", "type"), 12) %>%
separate(type, c("tumour"), -13)
cin.corr.df$tumour <-  as.numeric(str_remove(cin.corr.df$tumour, "-"))
cin.corr.df <- cin.corr.df %>%
mutate(type = case_when(tumour == 1 | tumour == 6 ~ "tumor",
tumour == 10 | tumour == 11 ~ "normal"))
#cin.corr.df <- cinmetrics.data %>% select(-tumour) %>% pivot_wider(
col_simpson <- colorRamp2(c(-1, 0, 1), c("#f8db27", "#ffffff", "#2f64d6"))
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_row_names_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_column_title_gp = gpar(fontface = "bold", fontsize = 10),
legend_border = "black", legend_labels_gp = gpar(fontface = "bold", fontsize = 8),
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
final.heatmap <- grid.grabExpr(draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 12)))
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(10, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
figure3 <- cinmetrics.data %>% mutate(value = log10(value)) %>%
ggstripchart(., x = "cinmetric",
y = "value",
combine = TRUE,
#merge = TRUE,
ylab = "",
xlab = "",
color = "type",
size = 0.5,
fill = "type",
font.label = c(10, "bold", "black"),
#shape = "type",
palette = "simpsons",
alpha = 0.5,
add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"),
orientation = "horiz",
order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
position = position_jitterdodge()
) + font("xy.text", size = 10, color = "black", face = "bold")
#scale_color_discrete(name = 'Sample type', labels = c("Normal", "Tumour") ) -> figure3
#annotate_figure(figure3,
#               top = text_grob("CINmetrics", color = "black", face = "bold", size = 14),
#                bottom = text_grob("log10(metric)", color = "black",
#                                   just = "center", face = "bold.italic", size = 16)) #%>% ggexport(filename = "figure3.pdf")
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(10, "bold", "black"), font.y = c(10, "bold", "black"), font.x = c(10, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(10, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
figure3 <- cinmetrics.data %>% mutate(value = log10(value)) %>%
ggstripchart(., x = "cinmetric",
y = "value",
combine = TRUE,
#merge = TRUE,
ylab = "",
xlab = "",
color = "type",
size = 0.5,
fill = "type",
font.label = c(10, "bold", "black"),
#shape = "type",
palette = "simpsons",
alpha = 0.5,
add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"),
orientation = "horiz",
order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
position = position_jitterdodge()
) + font("xy.text", size = 10, color = "black", face = "bold")
#scale_color_discrete(name = 'Sample type', labels = c("Normal", "Tumour") ) -> figure3
#annotate_figure(figure3,
#               top = text_grob("CINmetrics", color = "black", face = "bold", size = 14),
#                bottom = text_grob("log10(metric)", color = "black",
#                                   just = "center", face = "bold.italic", size = 16)) #%>% ggexport(filename = "figure3.pdf")
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(12, "bold", "black"), font.y = c(12, "bold", "black"), font.x = c(12, "bold", "black"), legend = c(0.9,0.85), legend.title = "Sample type", font.legend = c(12, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
ht_opt(heatmap_column_names_gp = gpar(fontface = "bold", fontsize = 12),
heatmap_row_names_gp = gpar(fontface = "bold", fontsize = 12),
heatmap_column_title_gp = gpar(fontface = "bold", fontsize = 12),
legend_border = "black", legend_labels_gp = gpar(fontface = "bold", fontsize = 10),
heatmap_border = TRUE)
normal.heatmap <- cin.corr.df %>% filter(type == "normal") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(name = "rho", col = col_simpson, column_title = "Normal samples", row_names_side = "left", show_row_dend = TRUE)
tumor.heatmap <- cin.corr.df %>% filter(type == "tumor") %>% select(3:8) %>% cor(., method = "spearman") %>% Heatmap(col = col_simpson, show_heatmap_legend = FALSE, column_title = "Tumour samples", show_row_names = FALSE, row_dend_side = "right")
combined.heatmap <- normal.heatmap + tumor.heatmap
final.heatmap <- grid.grabExpr(draw(combined.heatmap, column_title = "Spearman correlation between CINmetrics", row_dend_side = "right", column_title_gp = gpar(fontface = "bold", fontsize = 12)))
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() #
#scale_color_discrete(name = 'Sample type', labels = c("Normal", "Tumour") ) -> figure3
#annotate_figure(figure3,
#               top = text_grob("CINmetrics", color = "black", face = "bold", size = 14),
#                bottom = text_grob("log10(metric)", color = "black",
#                                   just = "center", face = "bold.italic", size = 16)) #%>% ggexport(filename = "figure3.pdf")
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(12, "bold", "black"), font.y = c(12, "bold", "black"), font.x = c(12, "bold", "black"), legend = c(0.9,0.80), legend.title = "Sample type", font.legend = c(12, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
figure4
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off()
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(12, "bold", "black"), font.y = c(12, "bold", "black"), font.x = c(12, "bold", "black"), legend = c(0.9,0.75), legend.title = "Sample type", font.legend = c(12, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
#scale_color_discrete(name = 'Sample type', labels = c("Normal", "Tumour") ) -> figure3
#annotate_figure(figure3,
#               top = text_grob("CINmetrics", color = "black", face = "bold", size = 14),
#                bottom = text_grob("log10(metric)", color = "black",
#                                   just = "center", face = "bold.italic", size = 16)) #%>% ggexport(filename = "figure3.pdf")
figure4 <- ggpar(figure3, main = "CINmetrics distribution in BRCA", ylab = "log10(metric)", font.main = c(12, "bold", "black"), font.y = c(12, "bold", "black"), font.x = c(12, "bold", "black"), legend = c(0.85,0.85), legend.title = "Sample type", font.legend = c(12, "bold", "black")) #%>% ggexport(filename = "figure3.pdf")
pdf("final_figure.pdf", width = 14, height = 6) # Open a new pdf file
plot_grid(figure4, final.heatmap, nrow = 1, ncol = 2, align = "hv", axis = "tb",
rel_widths = c(1,1), labels = c('A','B'))
dev.off() # Close the file
library(CINmetrics)
```{r}
library(TCGAbiolinks)
query.maskCNV.hg39.BRCA <- GDCquery(project = "TCGA-BRCA",
data.category = "Copy Number Variation",
data.type = "Masked Copy Number Segment", legacy=FALSE)
maskCNV.BRCA <- GDCprepare(query = query.maskCNV.hg39.BRCA, summarizedExperiment = TRUE)
maskCNV.BRCA <- data.frame(maskCNV.BRCA, stringsAsFactors = FALSE)
library(tidyverse)
cinmetrics.test <- CINmetrics(cnvData = maskCNV.BRCA)
cinmetrics.test <- CINmetrics(cnvData = maskCNV.BRCA)
mod.tai <- taiModified(cnvData = maskCNV.BRCA)
cinmetrics.test <- inner_join(cinmetrics.test, mod.tai, by = c("sample_id"), copy = TRUE)
head(cinmetrics.test)
cinmetrics.data <- cinmetrics.test %>%
pivot_longer(!sample_id, names_to = "cinmetric", values_to = "value") %>%
separate(sample_id, c("patient", "type"), 12) %>%
separate(type, c("tumour"), -13)
cinmetrics.data$tumour <-  as.numeric(str_remove(cinmetrics.data$tumour, "-"))
cinmetrics.data <- cinmetrics.data %>%
mutate(type = case_when(tumour == 1 | tumour == 6 ~ "tumor",
tumour == 10 | tumour == 11 ~ "normal"))
