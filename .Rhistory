print("Hello World")
print("Hello world")
print("Hello")
reticulate::repl_python()
print("Hello")
print("Hello")
reticulate::repl_python()
reticulate::repl_python()
load("/Users/vishal/Downloads/210526_TCGA_metricsandindices.RData")
library(tidyverse)
metricindex_unique <- metricindex %>% distinct(`Patient ID`, .keep_all = TRUE)
View(metricindex)
plot(density(log(metricindex_unique$value), na.rm = TRUE))
plot(density(log(metricindex_unique$value), na.rm = TRUE))
plot(density(log(metricindex_unique$PI), na.rm = TRUE))
plot(density(metricindex_unique$PI, na.rm = TRUE))
hist(metricindex_unique$value)
hist(metricindex_unique$PI)
View(metricindex_unique)
install.packages("targets")
library(targets)
install.packages(c("fitdistrplus", "formatR", "UCSCXenaTools"))
install.packages("targets")
library(CINmetrics)
load("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics/data/maskCNV.BRCA.rda")
head(maskCNV.BRCA)
library(tidyverse)
maskCNV.BRCA %>% group_by(Sample) %>% n()
maskCNV.BRCA %>% group_by(Sample)
maskCNV.BRCA %>% distinct(Sample)
maskCNV.BRCA %>% distinct(Sample) %>% nrow()
maskCNV.BRCA %>% distinct(Sample) %>% sample_n(10)
maskCNV.BRCA %>% distinct(Sample, .keep_all = TRUE) %>% sample_n(10)
temp <- maskCNV.BRCA %>% distinct(Sample) %>% sample_n(10)
View(temp)
shortmaskCNV.BRCA <- semi_join(maskCNV.BRCA, temp, by= c("Sample"))
View(shortmaskCNV.BRCA)
pwd()
cwd()
wd()
getwd()
save(shortmaskCNV.BRCA, file = "/data/maskCNV_BRCA.rda")
save(shortmaskCNV.BRCA, file = "~/data/maskCNV_BRCA.rda")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics/data")
save(shortmaskCNV.BRCA, file = "maskCNV_BRCA.rda")
library(CINmetrics)
data("maskCNV_BRCA")
dim(maskCNV_BRCA)
data("maskCNV_BRCA.rda")
dim(maskCNV_BRCA)
library(CINmetrics)
load("maskCNV_BRCA.rda")
usethis::use_data(shortmaskCNV.BRCA)
maskCNV_BRCA <- shortmaskCNV.BRCA
usethis::use_data(maskCNV_BRCA)
library(CINmetrics)
load("maskCNV_BRCA")
dim(maskCNV_BRCA)
library(CINmetrics)
devtools::check_win_*()
library(devtools)
devtools::build()
check_win_release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics_0.1.0.tar.gz")
check_win_release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
library(CINmetrics)
check_win_release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
library(CINmetrics)
version()
R.version()
R.version
library(CINmetrics)
devtools::release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics", check = TRUE)
spell_check(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
spell_check(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
devtools::release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics", check = TRUE)
check_rhub(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
devtools::release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics", check = TRUE)
devtools::release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics", check = TRUE)
devtools::release(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics", check = TRUE)
check_win_devel(pkg = "/Users/vishal/Library/Mobile Documents/com~apple~CloudDocs/Documents/R_scripts/CINmetrics")
data("iris")
typeof(iris)
str(iris)
mean(iris[which(Species == "versicolor")])
mean(iris[which(iris$Species == "versicolor")])
mean(iris[which(iris$Species == "versicolor"),])
mean(iris[,which(iris$Species == "versicolor")])
iris[which(iris$Species == "versicolor"),]
iris[which(iris$Species == "versicolor"),]$Petal.width
iris[which(iris$Species == "versicolor"),]$Petal.Width
mean(iris[which(iris$Species == "versicolor"),]$Petal.Width)
